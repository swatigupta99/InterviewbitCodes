You are given a string S, and you have to find all the amazing substrings of S.

Amazing Substring is one that starts with a vowel (a, e, i, o, u, A, E, I, O, U).

Input

Only argument given is string S.
Output

Return a single integer X mod 10003, here X is number of Amazing Substrings in given string.
Constraints

1 <= length(S) <= 1e6
S can have special characters
Example

Input
    ABEC

Output
    6

Explanation
	Amazing substrings of given string are :
	1. A
	2. AB
	3. ABE
	4. ABEC
	5. E
	6. EC
	here number of substrings are 6 and 6 % 10003 = 6.
  
  
  Solution:
  
  bool isvowel(char x)
{
    if (x == 'a' or x=='e' or x=='i' or x=='o' or x=='u')
    {
        return true; 
    }
    else {
        return false;
    }
}
int Solution::solve(string A) 
{
    int count=0;
    transform(A.begin() , A.end() , A.begin(), :: tolower);
    for (int i=0;i<A.size();i++)
    {
        if (isvowel(A[i]))
        {
            count = count + (A.size() - i);
        }
    }
    return count;
}
