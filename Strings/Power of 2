Find if Given number is power of 2 or not.
More specifically, find if given number can be expressed as 2^k where k >= 1.

Input:

number length can be more than 64, which mean number can be greater than 2 ^ 64 (out of long long range)
Output:

return 1 if the number is a power of 2 else return 0

Example:

Input : 128
Output : 1

Solution:

int Solution::power(string s) {
int n=s.size();
int a[n+3];
a[0]=1;
int t=0,c=1;
while(1)
{

   for(int i=0;i<c;i++)
   {
       a[i]=(a[i]*2+t);
       t=a[i]/10;
       a[i]=a[i]%10;
       
   }
   while(t>0)
   {
       a[c++]=t%10;
       t/=10;
   }
   if(c==n)
   { int i;
       for(i=0;i<c;i++)
         if(a[i]!=s[c-1-i]-'0')break;
       if(i==c)
       return 1;
   }
   else if(c>n)
   return 0;
}
}
