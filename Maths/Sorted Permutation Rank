Given a string, find the rank of the string amongst its permutations sorted lexicographically.
Assume that no characters are repeated.

Example :

Input : 'acb'
Output : 2

The order permutations with letters 'a', 'c', and 'b' : 
abc
acb
bac
bca
cab
cba
The answer might not fit in an integer, so return your answer % 1000003


Solution:


void factorial(vector<int>&fact,int n) 
{
    fact[0]=1;
    fact[1]=1;
    for (int i=2;i<n;i++)
    {
        fact[i]=i*fact[i-1]%1000003;
    }
}
int Solution::findRank(string A) {
    string s=A;
    sort(s.begin(),s.end());
    int n= A.size();
    vector<int>fact(n);
    factorial(fact,n);
    int ind=0;
    long long int ans=0;
    vector<int>check(n,1);
    for(int i=0;i<n;i++)
    {
        if (check[i]==-1) continue;
        else if (A[ind]!=s[i]){
            ans+=fact[n-ind-1];
        }
        else
        {
            check[i]=-1;
            ind++;
            i=-1;
        }
    }
    return (ans+1)%1000003;
    
    
}
