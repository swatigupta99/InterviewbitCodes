Given a read only array of n + 1 integers between 1 and n, find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times.

Sample Input:

[3 4 1 4 1]
Sample Output:

1
If there are multiple possible answers ( like in the sample case above ), output any one.

If there is no duplicate, output -1

Solution:

int Solution::repeatedNumber(const vector<int> &A) {
    vector<int>v=A;
    sort(v.begin(), v.end());
   //int max = A[0];
    for(int i=1;i<=v.size();i++)
    {
        if(v[i] == v[i-1])
        {
            return v[i];
        }
    
    }
    return -1;
}
