Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.




Solution:


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::deleteDuplicates(ListNode* A) {
    ListNode *head1 = new ListNode(0);
    head1->next = A;
    ListNode *temp = A;
    ListNode *prev = head1;
    while(temp!= NULL)
    {
        while (temp->next!=NULL && temp->val==temp->next->val) 
        {
            temp= temp->next;
        }
        if (prev->next== temp)
        {
            prev= prev->next;
        }
        else
        {
            prev->next=temp->next;
        }
        temp=temp->next;
    }
    return head1->next;
}
