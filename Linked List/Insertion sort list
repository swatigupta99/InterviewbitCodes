Sort a linked list using insertion sort.

Example :

Input : 1 -> 3 -> 2

Return 1 -> 2 -> 3


Solution:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::insertionSortList(ListNode* A) {
    ListNode *temp = A;
    ListNode *sorted = NULL;
    if (A->next == NULL) return A;
    while (temp)
    {
        ListNode *curr = temp;
        temp = temp->next;
        if (!sorted or sorted->val>curr->val)
        {
            curr->next = sorted;
            sorted = curr;
            
        }
        else 
        {
            ListNode *s=sorted;
            while (s)
            {
                if (!s->next or s->next->val>curr->val)
                {
                    curr->next = s->next;
                    s->next = curr;
                    break;
                }
                s=s->next;
            }
        }
    }
    return sorted;
    
}
