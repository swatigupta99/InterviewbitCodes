Given a singly linked list, determine if its a palindrome. Return 1 or 0 denoting if its a palindrome or not, respectively.

Notes:

Expected solution is linear in time and constant in space.
For example,

List 1-->2-->1 is a palindrome.
List 1-->2-->3 is not a palindrome.






Solution:





/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
int Solution::lPalin(ListNode* head) {
    stack <ListNode* > s;
    ListNode *temp = head;
    while(temp!= NULL)
    {
        s.push(temp);
        temp = temp->next;
    }
    while(!s.empty())
    {
        if (s.top()->val != head->val)
        {
            return 0;
        }
        s.pop();
        head = head->next;
    }
    return 1;
    
    
}
