Given an undirected graph G(V,E), check if the graph G is connected graph or not.
V is the number of vertices present in graph G and vertices are numbered from 0 to V-1.
E is the number of edges present in graph G.
Input Format :

Line 1: Two Integers V and E (separated by space)
Next 'E' lines, each have two space-separated integers, 'a' and 'b', denoting that there exists an edge between Vertex 'a' and Vertex 'b'.

Output Format :

"true" or "false"

Constraints :
2 <= V <= 1000
1 <= E <= 1000
Sample Input 1:

4 4
0 1
0 3
1 2
2 3

Sample Output 1:

true

Sample Input 2:

4 3
0 1
1 3 
0 3

Sample Output 2:

false 


Solution:

bool isConnected(int** edges, int V, int sv, bool* visited) {
    visited[sv] = true;
    
    for(int i = 0; i < V; i++) {
        if(i == sv) {
            continue;
        }
        
        if(edges[sv][i] && !visited[i]) {
            isConnected(edges, V, i, visited);
        }
    }
    
    for(int i = 0; i < V; i++) {
        if(!visited[i]) {
            return false;
        }
    }
    
    return true;
}
