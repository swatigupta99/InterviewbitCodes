Given an integer array A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Problem Constraints
1 <= |A| <= 100000



Input Format
The only argument given is integer array A.



Output Format
Return the total water it is able to trap after raining.



Example Input
Input 1:

 A = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]
Input 2:

 A = [1, 2]


Example Output
Output 1:

 6
Output 2:

 0


Example Explanation
Explanation 1:

 
 In this case, 6 units of rain water (blue section) are being trapped.
Explanation 2:

 No water is trapped.


Solution:


int Solution::trap(const vector<int> &A) {
    int len = A.size();
int left[len];
int right[len];
int leftmax = A[0];
int rightmax = A[len-1];
left[0]=0;
right[len-1]=0;
for(int i=1;i<len;i++){
left[i]=leftmax;
if(leftmax<A[i])
leftmax = A[i];
}
for(int i = len-2;i>=0;i--){
right[i] = rightmax;
if(rightmax<A[i])
rightmax = A[i];
}
int sum = 0;
for(int i=1;i<len-1;i++){
int heightForThis = min(left[i],right[i]);
if(heightForThis > A[i])
sum += (heightForThis - A[i]);
}

return sum;
}
