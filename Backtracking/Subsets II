Given a collection of integers that might contain duplicates, S, return all possible subsets.

 Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
The subsets must be sorted lexicographically.
Example :
If S = [1,2,2], the solution is:

[
[],
[1],
[1,2],
[1,2,2],
[2],
[2, 2]
]

Solution:

void allsubsets ( vector<int>&A ,vector<vector<int>>&ans , vector<int> &temp ,int index)
{
    
    for(int i = index ; i<A.size() ; i++)
    {
        temp.push_back(A[i]);
        ans.push_back(temp);
        allsubsets(A , ans , temp , i+1);
        while(i<A.size()-1 && A[i]==A[i+1])
        {
            i++;
           
        }
        temp.pop_back();  
    }
  
}




vector<vector<int> > Solution::subsetsWithDup(vector<int> &A) {
    sort (A.begin() , A.end());
    vector<vector<int>> ans;
    vector <int> temp ;
    ans.push_back(temp);
    int index = 0;
    allsubsets(A , ans , temp , 0 );
    return ans;
}


