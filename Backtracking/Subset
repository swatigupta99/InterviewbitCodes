Given a set of distinct integers, S, return all possible subsets.

 Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
Also, the subsets should be sorted in ascending ( lexicographic ) order.
The list is not necessarily sorted.
Example :

If S = [1,2,3], a solution is:

[
  [],
  [1],
  [1, 2],
  [1, 2, 3],
  [1, 3],
  [2],
  [2, 3],
  [3],
]

Solution:

void allsubsets( vector<int> A ,vector<vector<int>> ans , vector<int> subset , int index)
{
    ans.push_back(subset);
    for (int i=index ; i< A.size() ; i++)
    {
        subset.push_back(A[i]);
        allsubsets(A , ans , subset , i+1);
        subset.pop_back();
    }
    return ;
}


vector<vector<int> > Solution::subsets(vector<int> &A) {
    
    vector<vector<int>>ans;
    vector <int> subset;
    sort(A.begin(), A.end());
    int index = 0;
    allsubsets(A, ans , subset , index);
    return ans;
    
}
