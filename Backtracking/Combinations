Given two integers n and k, return all possible combinations of k numbers out of 1 2 3 ... n.

Make sure the combinations are sorted.

To elaborate,

Within every entry, elements should be sorted. [1, 4] is a valid entry while [4, 1] is not.
Entries should be sorted within themselves.
Example :
If n = 4 and k = 2, a solution is:

[
  [1,2],
  [1,3],
  [1,4],
  [2,3],
  [2,4],
  [3,4],
]


Solution:

void allcombinations(vector<vector<int>> &ans, vector<int> temp, int i, int A, int B) {
    if (B == 0) {
        ans.push_back(temp);
        return;
    }
    if (i > A) 
    {
        return;
    }
    temp.push_back(i);
    allcombinations(ans, temp, i+1, A, B-1);
    temp.pop_back();
    allcombinations(ans, temp, i+1, A, B);
}


vector<vector<int> > Solution::combine(int A, int B) {
   
    vector<vector<int> > ans;
    vector<int> temp;
    allcombinations( ans , temp , 1 , A , B);
    return ans;
    
}
