Given a binary tree, find and return the min and max data value of given binary tree.
Return the output as an object of PairAns class, which is already created.
Input format :

Elements in level order form (separated by space)
(If any node does not have left or right child, take -1 in its place)

Output Format :

Max and min (separated by space)

Sample Input :

8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1

Solution:


 class PairAns {
    public :
        int min;
        int max;
 };
 
#include<climits>
PairAns minMax(BinaryTreeNode<int> *root) {
   
    
    PairAns p;
    p.min = INT_MAX;
    p.max = INT_MIN;
    
    if(root == NULL) {
        return p;
    }
    
    PairAns leftPair = minMax(root -> left);
    PairAns rightPair = minMax(root -> right);
    
    p.max = max(root -> data, max(leftPair.max, rightPair.max));
    p.min = min(root -> data, min(leftPair.min, rightPair.min));
    
    return p;

}
