Given a binary tree, return the inorder traversal of its nodesâ€™ values.

Example :
Given binary tree

   1
    \
     2
    /
   3
return [1,3,2].

Using recursion is not allowed.



Solution:

vector<int> Solution::inorderTraversal(TreeNode* A) {
    vector<int> res;
    stack<TreeNode* > st;
    TreeNode* root=A;
    while(true)
    {
        if(root==NULL)
        {
            if(st.empty())
            break;
            root=st.top();
            st.pop();
            res.push_back(root->val);
            root=root->right;
            
            
        }
        else
        {
            
            st.push(root);
            root=root->left;
        }
    }
    return res;
}
