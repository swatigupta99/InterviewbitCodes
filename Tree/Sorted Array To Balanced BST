Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

 Balanced tree : a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. 
Example :


Given A : [1, 2, 3]
A height balanced BST  : 

      2
    /   \
   1     3
   
Solution:


TreeNode* helper(vector<int> &n, int low, int high) {
        if (low > high) { // Done
            return NULL;
        }
        int mid = (low + high) / 2;
        TreeNode* node = new TreeNode(num[mid]);
        node->left = helper(num, low, mid - 1);
        node->right = helper(num, mid + 1, high);
        return node;
    }

    TreeNode *sortedArrayToBST(vector<int> &n) {
        if (n.size() == 0) return NULL;
        return helper(n, 0, ((int)n.size()) - 1);
    }
   
 
