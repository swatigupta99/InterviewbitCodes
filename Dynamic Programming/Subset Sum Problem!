Given an integer array A of size N.

You are also given an integer B, you need to find whether their exist a subset in A whose sum equal B.

If there exist a subset then return 1 else return 0.



Problem Constraints
1 <= N <= 100

1 <= A[i] <= 100

1 <= B <= 105



Input Format
First argument is an integer array A.

Second argument is an integer B.



Output Format
Return 1 if there exist a subset with sum B else return 0.



Example Input
Input 1:

 A = [3, 34, 4, 12, 5, 2]
 B = 9
Input 2:

 A = [3, 34, 4, 12, 5, 2]
 B = 30


Example Output
Output 1:

 1
Output 2:

 0


Solution:

int Solution::solve(vector<int> &A, int B) {
    
    int sum=0;
    int n=A.size();
    for(int i=0;i<n;i++)
    {
        sum=sum+A[i];
        
    }
    if(B>sum)
    return 0;
    vector<bool> s(sum+1,0);
    s[0]=true;
    for(int i=0;i<n;i++)
    {
        for(int j=A[i];j<=sum;j++)
        {
            s[j]=s[j]|s[j-A[i]];
        }
    }
    
    return s[B];
    
}
