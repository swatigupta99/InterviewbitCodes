Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.

For example, given the following triangle

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).

Solution:

int Solution::minimumTotal(vector<vector<int> > &A) {
    int m=A.size();
    if(m==0)
      return 0;
    if(m==1)
      return A[0][0];
    int n=A[0].size();
    for(int i=m-2;i>=0;i--)
    {
      for(int j=0;j<=i;j++)
      {
       A[i][j]=A[i][j] + min(A[i+1][j],A[i+1][j+1]);
      }
   }
     return A[0][0];
}
